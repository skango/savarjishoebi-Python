GASAGHEBEBI = ['h', 'e', 'l', 'l', 'o']

MNISHVNELOBEBI = [0, 1, 2, 3, 4]

MENU = {
    'საჭმელები': {
        'აპეტაიზერები':{
            'მჭადი': {
                'ფასი': 7.50
            }
        },
        'ცხელი კერძები':{
            'ხინკალი': {
                'ფასი': 1.00
            }
        },
        'ცივი კერძები':{
            'სალათი': {
                'ფასი': 8.00
            }
        }
    },
    'სასმელები': {
        'არალკოჰოლური': {
            'წყალი': {
                'ფასი': 2.00
            },
            'ლიმონათი': {
                'ფასი': 3.50
            },
            'მინერალური წყალი': {
                'ფასი': 3.00
            },
        },
        'ალკოჰოლური': {
            'ღვინო': {
                'ფასი': 10.00
            },
            'ლუდი': {
                'ფასი': 6.00
            },
            'ჭაჭა': {
                'ფასი': 8.00
            }
        },
        'ცხელი სასმელები': {
            'ჩაი': {
                'ფასი': 5.00
            },
            'ყავა': {
                'ფასი': 3.20
            },
        }
    },
}



"""
0.

არგუმენტებად მიწპოდებულ გასაღებებისა და მნიშვნელობების სიიდან
ქმნის ახალ ლექსიკონს:
    ა. იღებს გასაღებებს, მნიშვნელობებს:
        - გასაღები[0] -> უთითებს მნიშვნელეობები[0]
    ბ. ქმნის ლექსიკონის წყვილს: {გასაღები[i]: მნიშვნელობა[i]}
    {'h':1, 'e':1, ...}
    გ. აბრუნებს შექმნილ ლექსიკონს

გაითვალისწინეთ შემდეგი ორი შემთხვევა:
    1. გასაღებების სიის სიგრძე მეტია ან ტოლია მნიშვნელობების სიის სიგრძეზე 
    2. გასაღებების სიის სიგრძე ნაკლებია მნიშვნელობების სიის სიგრძეზე 

:parameter gasaghebebi: list - შესაქმენი ლექსიკონის გასაღებები
:parameter mnishvnelobebi: list - შესაქმენი ლექსიკონის მნიშვნელობები
:return: dict - შედეგად შექმნილი ლექსიკონი
"""
def create_dict(gasaghebebi,mnishvnelobebi):
    if len(gasaghebebi) == len(mnishvnelobebi):
        json = {}
        for i in range(len(gasaghebebi)):
            json[gasaghebebi[i]] = mnishvnelobebi[i]

        return json
    else:
        raise Exception("Wrong Input!")

"""
1.

არგუმენტად მიწოდებული ლექსიკონის გასაღებს არგუმენტად მიწოდებულ menu-ს ლექსიკონს
უნიჭებს მნიშვნელობად.

:param leqsikoni: dict - ლექსიკონი, რომელშიც უნდა ჩავამატოთ menu
:param menu: dict - მენიუს ამსახველი ლექსიკონი
:param gasaghebi: str - leqsikoni-ს გასაღები, რასაც მნიშვნელობად უნდა
მივანიჭოთ menu
"""
def add_menu(leqsikoni,menu,gasaghebi):
    leqsikoni[gasaghebi] = menu

"""
2.

ამუშავებს მიღებულ შეკვეთას. არგუმენტად მიწოდებულ მენიუს კატეგორიისა და
ქვეკატეგორიის კერძის ფასს პოულობს და არგუმენტად მიწოდებულ რაოდენობაზე
გამრავლების შედეგს აბრუნებს.

:param menu: dict - მენიუს ამსახვლი ლექსიკონი
:param kategoria: str - მენიუში არსებული კატეგორია (საჭმელები ან სასმელები) ივარაუდე რომ ეს კატეგორია
არსებობს
:param qve_kategoria: str - მენიუში არსებული ქვეკატეგორია; ივარაუდე რომ ეს კატეგორია
არსებობს
:param kerdzi: str - მენიუში არსებული კერძი; ივარაუდე რომ ეს კერძი არსებობს
:param raodenoba: int - კერძის რაოდენობა; კერძის ფასს ამაზე ვამრავლებთ

:return: float
"""
def calculate_price(menu,kategoria,qve_kategoria,kerdzi,raodenoba):
    food = menu[kategoria][qve_kategoria][kerdzi]
    return raodenoba * food["ფასი"]



def main():
    """
    შეასრულეთ ამ ფუნქციის ტანში მოცემული ინსტრუქციები
    """
    # 0. მე-0 დამხმარე ფუნქციის გამოძახეზბით შექმენი და შეინახე ლექსიკონი;
    # არგუმენტებად მიაწოდე ამ მოდულში არსებული მუდმივები,
    # GASAGEHEBEBI და MNISHVNELOBEBI

    j = MENU #create_dict(GASAGHEBEBI, MNISHVNELOBEBI)

    # 1. მე-1 დამხმარე ფუნქცია გამოიძახე; არგუემენტებად მიაწოდე შემდეგი
    # მონაცემები:
    #   - წინა ნაბიჯის შედეგად მიღებული ლექსიკონი
    #   - ამ მოდულში არსებული მუდმივა, MENU
    #   - მე-0 ნაბიჯში არსებული რომელიმე გასაღები (შენი არჩევანია, რომელიც
    #   გინდა აირჩიე. მომხმარებელს არ შეატანინო ეს, უბრალოდ შენით დაწერე)

    #add_menu(j, MENU, j["h"])

    #ragaca = j["h"]


    # 2. მე-0 ნაბიჯში მიღებული ლექსიკონში, წინა, მე-1 ნაბიჯში მიწოდებული
    # ბოლო პოზიციური არგუმენტით მითითებული მნიშვნელობა ცალკე ცვლადში შეინახე;
    # გაიხსენე, აქ წინა ნაბიჯში ჩასვი MENU

    # 3. მომხმარებელს სთხოვე კატეგორია
    kategoria = input("კატეგორია:")
    # 4. მომხმარებელს სთხოვე ქვეკატეგორია
    qve_kategoria = input("ქვეკატეგორია:")
    # 5. მომხმარებელს სთხოვე კერძი
    kerdzi = input("კერძი:")
    # 6. მომხმარებელს სთხოვე რაოდენობა

    raodenoba = int(input("რაოდენობა:"))

    # 7. გამოიძახე მე-2, დამხმარე ფუნქცია და არგუმენტებად მიაწოდე
    # შემდეგი მონაცემები:
    #   - მე-2 ნაბიჯში შენახული ცვლადი
    #   - მე-3 ნაბიჯში შენახული ცვლადი
    #   - მე-4 ნაბიჯში შენახული ცვლადი
    #   - მე-5 ნაბიჯში შენახული ცვლადი

    fasi = calculate_price(j,kategoria,qve_kategoria,kerdzi,raodenoba)

    # 8. წინა ნაბიჯის შედეგად მიღებული ანგარიში კონსოლში დაბეჭდე

    print(fasi)

main()
