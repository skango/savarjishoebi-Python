ELEMENTEBI = [
    100,
    2,
    500,
    -100.23,
    9001
]


"""
0.

არგუმენტად მიწოდებულ სიას ახარისხებს,
გაჩუმებითი არგუმენტისდამიხედვით.

:param sia: list - სია
:param reverse: bool - გაჩუმებით False.
მიუთითებს სიას უკუღმად ვახარისხებთ თუ არა
"""


"""
1.

არგუმენტად მიწოდებულ სიაში, არგუმენტად მიწოდებულ ელემტნს ეძებს.
თუ ელემენტი სიაში არ მოიძებნა, აბრუნებს None-ს

:param sia: list - სია, რომელიც მონაცემებს მოიცავს
:param elementi: any - რამე მონაცემი, რომელსაც სიაში ვეძებთ
:return: int - მოძებნილი ელემენტის ინდექსი
"""


"""
2.

მიწოდებული სიის შუა ელემენტის ინდექსს აბრუნებს.
თუ სია ცარიელია ან აქვს 1 ელემენტი, დააბრუნებს 0-ს.

სხვა შემთხვევაში კი შემდეგ მაგალითს მივმართოთ:
sia = [0,1,2,3,4,5]
len(sia) = 6
მაშინ, შუა ელემენტი იქნება:

შუა_ელემენტი = (სიის სიგრძე - 1) / 2

მაგრამ, 2.5 არ არის ვალიდური ინდექსი. ამიტომაც,
2.5 ქვემოთ დავამრგვალოთ, და მივიღებთ 2-ს.

ზემოთ მოცემული მაგალითის გამოყენებით დაწერეთ ფუნქციის ტანი.

:param sia: list - სია
:return: int - სიის შუა ელემენტის ინდექსქსს
"""


"""
3.

სიის შუა ელემენტის პოზიციას პოულობს, მე-2 ფუნქციის გამოძახებით,
შემდეგ მასზე მყოფ ელემენტს შლის და აბრუნებს

:param sia: list - სია
:return: any - თუ მონაცემი მოიძებნა, სხვა შემთხვევაში None
"""


"""
4.

სიაში არსებული 2 ელემენტის ადგილმდებარეობას უცვლის. ივარაუდე, რომ
სიაში ორივე ელემენტი არსებობს.

:param sia: list
:param elementi_1: any - სიაში არსებული ერთი ელემენტი
:param elementi_2: any - სიაში არსებული მეორე ელემენტი
"""


def main():
    """
    ამ ვარიანტის დანარჩენი ორი დავალების სირთულის გამო, ამ ფუნქციის
    ტანს გჩუქნით. საკმარისია ზემოთ მოცემული ფუნქციების დავალება გაიგოთ და
    შეასრულოთ
    """
    # 0. განაცხადე ცვლადი, რომელიც უთითებს ამ მოდულში არსებულ მუდმივას,
    # ELEMENTEBI-ს ასლს

    # 1. გამოიძახე მე-0 დამხმარე ფუნქცია, არგუმენტად მიაწოდე მე-0 ნაბიჯში
    # განცხადებული ცვლადის სახელი და დახარისხებული სია დაბეჭდე

    # 2. გამოიძახე მე-0 დამხმარე ფუნქცია, არგუმენტად მიაწოდე მე-0 ნაბიჯში
    # განცხადებული ცვლადის სახელი და საჭირო გაჩუმებითი არგუმენტები, რათა
    # უკუღმად დახარისხდეს დახარისხებული სია დაბეჭდე

    # 3. გამოიძახე მე-1 დამხმარე ფუნქცია. არგუმენტად მიაწოდე მე-0 ნაბიჯში
    # შექმნილი სია და მეორე არგუმენტად რამე ელემენტი. ფუნქციის მიერ
    # დაბრუნებული შედეგი შეინახე და კონსოლში დაბეჭდე

    # 4. გამოიძახე მე-3 დამხმარე ფუნქცია. არგუმენტად მიაოწდე მე-0 ნაბიჯში
    # შექმნილი სია.

    # 5. გამოიძახე მე-4 დამხმარე ფუნქცია. არგუმენტებად მიაოწდე მე-0 ნაბიჯში
    # შექმნილი სია და მასში არსებული ორი ელემენტი. შემდეგ კი კონსოლშI დაბეწDეთ
    # შედეგად შეცვლილი იგივე სია.


main()
