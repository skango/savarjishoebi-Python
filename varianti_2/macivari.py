# შემოიტანე შემთხვევითი რიცხვების წარმოების მოდული
import random as r

# მოდულის მუდმივები: ესენი არ შეცვალო, არ გაადადგილო, არაფერი არ უქნა
# ესენი გამოიყენე, ქვემოთ დასაწერ, chaitsere_sayidlebi-ის ფუნქციის ბლოკში
PRODUQTEBI = [
    'პომიდორი',
    'კარაქი',
    'კვერცხი',
    'კაკაო',
    'რძე',
    'პური',
    'ყველი',
    'იოგურტი',
    'წიწიბურა',
    'შაქარი',
    'მაკარონი',
    'ზეთი',
    'ფქვილი',
    'სოდა'
]


def chaitsere_sayidlebi(raodenoba=10):
    """
    ფუნქცია, რომელიც ქმნის საყიდლების სიას. გაჩუმებით მიწოდებულ
    რაოენობას იღებს და ამ მოდულის მუდმივა PRODUQTEBI-ს შემთხვევითი
    ინდექსებით მონაცემბს წვდემა და უმატებს სიას:

    0. შექმენი ცარიელი სია

    1. ციკლი აწარმოე არგუმენტ raodenoba ჯერ:
        ა. random.randrange-ის მეშვეობით, PRODUQTEBI სიიდან მიაკითხე
        რამე შემთხვევით, random, ინდექსს (დაფიქრი, დიაპაზონის ქვედა
        და ზედა ზღვარი რა უნდა იყოს, თუ გვინდა რომ PRODUQTEBI სიიდან
        ავიღოთ შემთხვევითი ინდექსი?); შედეგი შეინახე ცვლადში

        ბ. მე-0 ნაბიჯზე შექმნილ სიას მიუმატე ამ წინა ნაბიჯში წარმოებული
        ცვლადი

    2. მე-0 ნაბიჯზე წარმოებული სია დაბეჭდე კონსოლში

    3. მე-0 ნაბიჯზე წარმოებული სია დააბრუნე ფუნქციიდან


    შედეგად აბრუნებს შემთხვევით წარმოებულ საყიდლებს.

    :param raodenoba: int მთელრიცხვა მონაცემთა ტიპი
    :return: list სიას, რომელშიც არის მოთავსებული საყიდლების სახლები,
    მაგალითად:
    ['მაწონი', 'ხაჭო', 'ხაჭო', 'პომიდორი', 'მაწონი']
    """
    sia = []
    for i in range(raodenoba):
        produqti = PRODUQTEBI[r.randrange(0,len(PRODUQTEBI))]
        sia.append(produqti)

    print(sia)
    return sia

def sheavse_macivari(sayidlebis_sia):
    """
    დაწერეთ ფუნქცია, რომელიც საყიდლების სიას წაიკითხავს, და დაგვირბუნებს
    ლექსიკონს, რომელშიც იქნება თითო ნივთის სახელი და მისი მაცივარში
    მოთავსებული რაოდენობა:

    0. განცახადე ცარიელი ლექსიკონი და შეინახე ცვლადში
    1. არგუმენტ saydilebis_sia-ში თითო ელემენტზე მოახდინეთ იტერაცია:
        ა. შეამოწმეთ, ელემენტი არსებობს თუ არა მე-0 ნაბიჯზე შექმნილ
        ლექსიკონში, გასაღებად:
            - თუ არ არსებობს: ეს ელემენტი შეინახეთ როგორც ლექსიკონის
            გასაღები და მიუთითეთ რიცხვი 1
            - თუ არსებობს: არსებულ გასაღებს **მიუმატეთ** 1
    2. შედეგად მიღებულ ლექსიკონს აბრუნებს

    :param sayidlebis_sia: list სია; საყიდლების სია, თითო ელემენტი სტრიქონია,
    მაგალითად:
    ['მაწონი', 'ხაჭო', 'ხაჭო', 'პომიდორი', 'მაწონი']
    :return: dict ლექსიკონი; წამროადგენს მაცივარს, სადაც თითო წყვილის
    გასაღები არის სტრიქონი და მნიშვენლობა არის მთელრიცხვა მონაცემთა ტიპი,
    მაგალითად:
    {
        'მაწონი': 2,
        'ხაჭო': 2,
        'პომიდორი': 1
    }
    (შეიძლება თანმიმდევრობა იყოს სხვანაირი, რადგან ლექსიკონი დაუხარისხებელი
    მონაცემთა ტიპი არის. მაგას მნიშვნელობა არ აქვს)
    """
    data = {}
    for i in sayidlebis_sia:
        if data.get(i) is None:
            data[i] = 1
        else:
            data[i] += 1

    return data


def gamoakle_nivti(macivari, nivti):
    """
    დაწერე ფუნქცია,რომელიც არგუმენტ macivari-ის ლექსიკონიდან,
    მეორე არგუმენტად მიწოდბულ nivti-ის გასაღებით მნიშვნელობას მიწვდება,
    გასაღებსა და მნიშვნელობას დაბეჭდავს, და ბოლოს, nivti გასაღებით მითითებულ
    მნიშვნელობას ლექსიკონიდან ბოლომდე ამოშლის:

    0. არგუმენტი nivti-ის გასაღები შეამოწმე ლექსიკონში არსებობს თუ არა:
        ა. თუ არსებობს:
            - nivti-ს გასაღები და მის მიერ მითითებული მნიშვნელობა კონსოლში
            დაბეჭდე
            - როგორც გსურს, ისე ამოშალე ეს წყვილი ლექსიკონიდან
        ბ. თუ არ არსებობს:
            - მომხმარებელს კონსოლში დაუბეჭდე რამე შეტყობინება, რაც გააგებინებს
            რომ ეს გასაღები ლექსიკონში არ არასებობს

    :param macivari: dict, ლექსიკონი; წარმოადგენს საყიდლებს, მაგალითად,
    ასე შეიძლება გამოიყურებოდეს:
      {
        'მაწონი': 2,
        'ხაჭო': 2,
        'პომიდორი': 1
    }

    :param nivti: str სტრიქონი; სტრიქონი რომელიც წარმოადგენს გასაღებს, რომელიც
    შეიძლება ლექსიკონში იყოს ან არ იყოს
    """
    if macivari.get(nivti) is None:
        print("This item does not exist")
    else:
        print(nivti, macivari[nivti])
        del macivari[nivti]


def macivris_shemotsmeba(macivari):
    """
    დაწერე ფუნქცია, რომელიც არგუმენტად მიწოდებული ლექსიკონის თითო
    გასაღებსა და მის მიერ მითითებულ მნიშვნელობას, მომხმარებლისთვის გასაგებად
    დაბეჭდავს. ამისთვის რამოდენიმე ხერხია, რაც გვაგვივლია. ამოირჩიე ერთ-ერთი.

    :param macivari: dict ლექსიკონი, რომლის თითო წყვილი არის
        ნივთი: რაოდენობა, ანუ str: int

    {
        'მაწონი': 2,
        'ხაჭო': 2,
        'პომიდორი': 1
    }


    მაგალითად, შეიძლება დაბეჭდოს ასეთი მაცივარი:

        'მაწონი': 2,
        'ხაჭო': 2,
        'პომიდორი': 1
    """
    for i in macivari:
        print(f"{i} : {macivari[i]}")


